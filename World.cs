using System;
using System.Collections.Generic;

namespace PudgeClient
{
    /*
     .*\[(-?\d+),\W(-?\d+)\]
         



        (-160, 160),
(-150, 160),
(-140, 160),
(-130, 160),
(-120, 160),
(-110, 160),
(-100, 160),
(-90, 160),
(-80, 160),
(-70, 160),
(-60, 160),
(-50, 160),
(-40, 160),
(-30, 160),
(-20, 160),
(-10, 160),
(0, 160),
(10, 160),
(20, 160),
(30, 160),
(40, 160),
(50, 160),
(60, 160),
(70, 160),
(80, 160),
(90, 160),
(100, 160),
(110, 160),
(120, 160),
(130, 160),
(140, 160),
(150, 160),
(-160, 160),
(-160, 150),
(-160, 140),
(-160, 130),
(-160, 120),
(-160, 110),
(-160, 100),
(-160, 90),
(-160, 80),
(-160, 70),
(-160, 60),
(-160, 50),
(-160, 40),
(-160, 30),
(-160, 20),
(-160, 10),
(-160, 0),
(-160, -10),
(-160, -20),
(-160, -30),
(-160, -40),
(-160, -50),
(-160, -60),
(-160, -70),
(-160, -80),
(-160, -90),
(-160, -100),
(-160, -110),
(-160, -120),
(-160, -130),
(-160, -140),
(-160, -150),
(160, -160),
(150, -160),
(140, -160),
(130, -160),
(120, -160),
(110, -160),
(100, -160),
(90, -160),
(80, -160),
(70, -160),
(60, -160),
(50, -160),
(40, -160),
(30, -160),
(20, -160),
(10, -160),
(0, -160),
(-10, -160),
(-20, -160),
(-30, -160),
(-40, -160),
(-50, -160),
(-60, -160),
(-70, -160),
(-80, -160),
(-90, -160),
(-100, -160),
(-110, -160),
(-120, -160),
(-130, -160),
(-140, -160),
(-150, -160),
(160, -160),
(160, -150),
(160, -140),
(160, -130),
(160, -120),
(160, -110),
(160, -100),
(160, -90),
(160, -80),
(160, -70),
(160, -60),
(160, -50),
(160, -40),
(160, -30),
(160, -20),
(160, -10),
(160, 0),
(160, 10),
(160, 20),
(160, 30),
(160, 40),
(160, 50),
(160, 60),
(160, 70),
(160, 80),
(160, 90),
(160, 100),
(160, 110),
(160, 120),
(160, 130),
(160, 140),
(160, 150),
(-60, 0),
(-70, -10),
(-70, -20),
(-80, -30),
(-90, -40),
(-100, -50),
(-100, -60),
(0, -60),
(-10, -70),
(-20, -70),
(-30, -80),
(-40, -90),
(-50, -100),
(-60, -100),
(60, 0),
(70, 10),
(70, 20),
(80, 30),
(90, 40),
(100, 50),
(100, 60),
(0, 60),
(10, 70),
(20, 70),
(30, 80),
(40, 90),
(50, 100),
(60, 100),
(40, -80),
(30, -70),
(20, -70),
(10, -60),
(-40, 80),
(-30, 70),
(-20, 70),
(-10, 60),
(80, -40),
(70, -30),
(70, -20),
(60, -10),
(-80, 40),
(-70, 30),
(-70, 20),
(-60, 10),
(0, -150),
(0, -140),
(0, -130),
(0, 150),
(0, 140),
(0, 130),
(150, 0),
(140, 0),
(130, 0),
(-150, 0),
(-140, 0),
(-130, 0),
(140, -80),
(130, -80),
(120, -80),
(80, -140),
(80, -130),
(80, -120),
(-140, 80),
(-130, 80),
(-120, 80),
(-80, 140),
(-80, 130),
(-80, 120)

         */

    public static class Rules
    {
        public const int PudgeRadius = 20 / 2;
    }

    public static class World
    {
        public const int Width = 340;
        public const int Height = 340;

        public static HashSet<Node> Nodes;

        static World()
        {
            
        }
    }

    public struct Node : IEquatable<Node>
    {
        public int X;
        public int Y;
        public bool IsWalkable;

        public Node(int x, int y, bool isWalkable = true)
        {
            X = x;
            Y = y;
            IsWalkable = isWalkable;
        }

        public bool Equals(Node other)
        {
            return X == other.X && Y == other.Y;
        }

        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            return obj is Node && Equals((Node) obj);
        }

        public override int GetHashCode()
        {
            unchecked
            {
                return (X*397) ^ Y;
            }
        }
    }
}